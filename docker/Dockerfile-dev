#
# This docker file shall allow API developers to run the metasfresh-webui-frontend in a container,
# without the need to locally install npm and node.
# Maybe in future also the CI pipeline might use it.
#
# To build it, go to this repo's base dir and run something like
# docker build --file ./docker/Dockerfile-dev --tag metasfresh-webui-frontend-dev .
#
# To run it, run something like
# docker run --name metasfresh-webui-frontend -p 3000:3000 -e "API_URL=http://$(hostname):8080" -d metasfresh-webui-frontend-dev
#
# About `-e "API_URL=http://$(hostname):8080"`:
# The API-URL for the webui-api service to connect is written into the docker image's config.js file when the container is run, 
# right before the nodejs server is started.
# The value `http://$(hostname):8080` assumes that you run the webui-api on port 8080 on the same host that the docker image is build on.
#
# Also see https://github.com/metasfresh/metasfresh-webui-frontend/issues/1013
#

FROM node:8

ENV DOCKER true

RUN npm install webpack -g

# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# Copy app source to Docker
COPY . /usr/src/app/

# Install node_packages
RUN npm install

# Copy the script which shall output the correct config.js used by the server when the container starts
COPY docker/config_from_env.sh config_from_env.sh
RUN chmod +x config_from_env.sh

# Copy the script that shall actually start the nodejs server within the container
COPY docker/provision_config_and_start_server.sh provision_config_and_start_server.sh
RUN chmod +x provision_config_and_start_server.sh

EXPOSE 3000

CMD [ "/usr/src/app/provision_config_and_start_server.sh" ]

